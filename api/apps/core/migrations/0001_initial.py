# Generated by Django 5.2.7 on 2025-10-22 20:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import utilities.general
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("is_active", models.BooleanField(db_index=True, default=False)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("provider", "Service Provider"),
                        ],
                        max_length=20,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("full_name", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("phone_number_verified", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("terms_accepted", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date_of_birth", models.DateField()),
                (
                    "preferred_service_areas",
                    models.TextField(
                        help_text="Enter comma-separated areas, e.g., 'Ikeja, Yaba'"
                    ),
                ),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        help_text="Profile photo will be automatically optimized for quality and size. Supported formats: JPG, JPEG, PNG, GIF, WEBP",
                        null=True,
                        upload_to="profile_photos/customers/",
                        validators=[utilities.general.validate_image_file],
                    ),
                ),
                (
                    "notification_preferences",
                    models.JSONField(
                        default=dict,
                        help_text="Preferences for receiving notifications about cleaning services",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Profile",
                "verbose_name_plural": "Customer Profiles",
            },
        ),
        migrations.CreateModel(
            name="ServiceProviderProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_business", models.BooleanField(default=False)),
                ("business_name", models.CharField(max_length=255)),
                ("is_registered_business", models.BooleanField(default=False)),
                (
                    "identification_document",
                    models.FileField(
                        blank=True, null=True, upload_to="identification_docs/"
                    ),
                ),
                (
                    "identification_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("service_description", models.TextField(blank=True, null=True)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        help_text="Profile photo will be automatically optimized for quality and size. Supported formats: JPG, JPEG, PNG, GIF, WEBP",
                        null=True,
                        upload_to="profile_photos/service_providers/",
                        validators=[utilities.general.validate_image_file],
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("is_available", models.BooleanField(default=False)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Average rating from customers",
                        max_digits=3,
                    ),
                ),
                ("total_ratings", models.PositiveIntegerField(default=0)),
                (
                    "notification_preferences",
                    models.JSONField(
                        default=dict,
                        help_text="Preferences for receiving notifications about cleaning services",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provider_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Provider Profile",
                "verbose_name_plural": "Service Provider Profiles",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("address_label", models.CharField(max_length=10, null=True)),
                ("street_address", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("instruction", models.TextField(null=True)),
                ("isDefault", models.BooleanField(default=False)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="core.customerprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("isDefault", True)),
                        fields=("customer",),
                        name="unique_default_address_per_customer",
                    )
                ],
            },
        ),
    ]
